% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/searchMetadataText.R
\name{searchMetadataText}
\alias{searchMetadataText}
\title{Search a metadata database}
\usage{
searchMetadataText(
  query,
  latest = TRUE,
  include.metadata = TRUE,
  where.only = FALSE,
  pid.name = "paths.pid",
  name = "bioconductor.sqlite3",
  cache = cacheDirectory(),
  overwrite = FALSE
)
}
\arguments{
\item{query}{List or character vector specifying the query to execute, see Details.}

\item{latest}{Logical scalar indicating whether to only search for matches within the latest version of each asset.
Ignored if \code{where.only=TRUE}.}

\item{include.metadata}{Logical scalar indicating whether metadata should be returned.
Ignored if \code{where.only=TRUE}.}

\item{where.only}{Logical scalar indicating whether to return the WHERE filter condition.
Intended to help developers in assembling their own SQL queries involving a token search.}

\item{pid.name}{String containing the name of the column of the \code{paths} table that contains the path ID.
Only used if \code{where.only=TRUE}.}

\item{name, cache, overwrite}{Further arguments to pass to \code{\link{fetchMetadataDatabase}}.}
}
\value{
If \code{where.only=FALSE}, a data frame specifying the contaning the results of the query.
\itemize{
\item The \code{project}, \code{asset} and \code{version} columns contain the identity of the version with matching metadata.
\item If \code{include.metadata=TRUE}, a \code{metadata} column is present with the nested metadata for each match.
\item If \code{latest=TRUE}, a \code{latest} column is present indicating whether the matching version is the latest for its asset.
Otherwise, only the latest version is returned.
}

If \code{where.only=TRUE}, a list containing \code{where}, a string can be directly used as a WHERE filter condition;
and \code{parameters}, the parameter bindings to be used in \code{where}.
The return value may also be \code{NULL} if the query has no well-defined filter.
}
\description{
Perform a string search on a SQLite database containing metadata from the gypsum backend
(see \url{https://github.com/ArtifactDB/bioconductor-metadata-index}).
}
\examples{
searchMetadataText(c("GRCm38", "brain"), include.metadata=FALSE)

# Now for a slightly more complex query:
tissue.query <- list("brain", "pancreas")
attr(tissue.query, "type") <- "or"
genome.query <- list("GRCm38")
attr(genome.query, "field") <- "genome"
query <- list(tissue.query, genome.query)
attr(query, "type") <- "and"
searchMetadataText(query, include.metadata=FALSE)
}
\seealso{
\code{\link{fetchMetadataDatabase}}, to download and cache the database files.
}
\author{
Aaron Lun
}
